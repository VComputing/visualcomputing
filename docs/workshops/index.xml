<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://VComputing.github.io/visualcomputing/docs/workshops/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://VComputing.github.io/visualcomputing/docs/workshops/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://VComputing.github.io/visualcomputing/docs/workshops/3d_labyrinth/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://VComputing.github.io/visualcomputing/docs/workshops/3d_labyrinth/</guid><description>Laberinto (Aplicación 3D) # Planteamiento del problema # Implementar una aplicación web 3D.
Laberintos de Conexión Simple Este tipo de laberinto cuenta con una única solución, es decir, solo existe una forma de llegar a la salida a partir de un punto de entrada determinado, los caminos errados acaban en pasillos sin salida. Algoritmo de construcción de Prim Existen varias formas de abordar el problema de construir un laberinto de conexión simple, uno de ellos es el Algoritmo de construcción de Prim.</description></item><item><title/><link>https://VComputing.github.io/visualcomputing/docs/workshops/filtro_convolucion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://VComputing.github.io/visualcomputing/docs/workshops/filtro_convolucion/</guid><description>Filtros de Convolución # Problem Statement # Implement an image processing web app supporting different image kernels and supporting:
Image histogram visualization. Different lightness (coloring brightness) tools.
Background Un kernel es una matriz generalmente de 3x3, cuyos valores son operados con los pixeles de una imagen determinada para producir diversos efectos. Instrucciones de Uso
→: Siguiente filtro. ←: Filtro anterior. ↑: Aumentar div. ↓: Disminuir div. w: Aumentar Brillo. s: Disminuir Brillo.</description></item><item><title/><link>https://VComputing.github.io/visualcomputing/docs/workshops/shaders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://VComputing.github.io/visualcomputing/docs/workshops/shaders/</guid><description>Shaders # Modelos de Iluminación # Objetivo: # Crear una escena que cuente con distintos tipos de modelos de iluminación e incorpore atenuación de las fuentes de luz.
Modelos de Iluminación Una forma de simular el comportamiento de la luz, estos son utilizados para dar más realismo a las escenas o generar interesantes materiales. Los modelos trabajados en este ejercicio son:
Luz ambiental: Simula la cantidad de luz presente en la escena, esta no está asociada a una fuente de luz en particular.</description></item><item><title/><link>https://VComputing.github.io/visualcomputing/docs/workshops/visual_illusions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://VComputing.github.io/visualcomputing/docs/workshops/visual_illusions/</guid><description>Visual Illusions # Problem Statement # Study, implement and discuss possible applications of some known visual phenomena and optical illusions.
Chromatic Induction Sometimes your brain can change the colors of what you are seeing, based on the colors of surrounding the object. This fenomenom is caused by the chromatic induction effect &amp;ldquo;the change in perceived color of a light caused by a nearby inducing stimulus&amp;rdquo;, and thats how the moving square illusion works.</description></item></channel></rss>